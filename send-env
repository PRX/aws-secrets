#!/bin/sh -e

# send-env
#   Encrypt a file using a KMS key alias, then send it to an s3 bucket.
#
# Synopsis:
#
# send-env -s <source file> -b <s3 bucket> -k <s3 key> -a <kms alias>
#   <source file> defaults to .env
#
# Note, run 'aws configure' before running this, to set aws access keys.

src=.env
s3_bucket=
s3_key=
kms_alias=

while getopts ":s:b:k:a:" opt; do
    case $opt in
        s) src=$OPTARG       ;;
        b) s3_bucket=$OPTARG ;;
        k) s3_key=$OPTARG    ;;
        a) kms_alias=$OPTARG ;;
    esac
done

die() {
    echo $@;
    exit
}

[ -e "$src" ] || die "$src not found"

tmp=`mktemp -d`
encrypted=$tmp/data.enc

key_id=`aws kms list-aliases --output text --query "Aliases[?AliasName=='alias/$kms_alias'].TargetKeyId | [0]"`

aws kms encrypt \
    --key-id $key_id \
    --plaintext fileb://$src \
    --query CiphertextBlob \
    --output text \
    | base64 --decode \
    > $encrypted

aws s3api put-object \
    --bucket $s3_bucket \
    --key $s3_key \
    --acl private \
    --body $encrypted \
    --output text \
    --query 'None' \
    | egrep -v '^None$'

rm -rf $tmp
